#!/usr/bin/env bash

# Set locale settings
export LC_ALL=C
export DEBIAN_FRONTEND=noninteractive

# Include files
PWD=$(pwd)
SRC="${BASH_SOURCE%/*}"
if [ ! -d "$SRC" ]; then SRC="$PWD"; fi
[ -z "$SUDO_USER" ] && SUDO_USER="root"

. $SRC/cmd_utils
. $SRC/cmd
. $SRC/format
. $SRC/functions
. $SRC/update_kernel

# Check privileges
if ! isSudo; then
	echo -e "${ERR}Please run the following command instead!...[sudo $0 $ret_args]${END}";
    exitAll 2
fi

# Min Requirement
REQ_BASH_VERSION=4.3


# DIRECTORY Paths
TEMP_DIRECTRORY=$(su -p $SUDO_USER -c "mktemp -d")
WORK_DIRECTRORY="$PWD/benchmarks"
LOG_DIRECTRORY="$PWD/log"

# File Paths
REQ_FILE="requirements/req.yml"
DEF_FILE="src/definitions"
LOG_FILE="${LOG_DIRECTRORY}/ret.log"
BASH_FILENAME="bash-4.4.18"
Ubuntu_ROCM_REPO="/etc/apt/sources.list.d/rocm.list"
CentOS_ROCM_REPO="/etc/yum.repos.d/rocm.repo"
DOCKERFILE="container/docker/Dockerfile"
RECIPEFILE="container/singularity/recipe"

# Url's
UBUNTU_KERNEL_URL="kernel.ubuntu.com/~kernel-ppa/mainline/"
TF_BENCHMARKS_URL="https://github.com/tensorflow/benchmarks.git"
BASH_URL="https://ftp.gnu.org/gnu/bash/"
ROCM_DEB="http://repo.radeon.com/rocm/apt/debian/ xenial main"
ROCM_RPM="http://repo.radeon.com/rocm/yum/rpm"
WHL_URL="https://tesho.de/pytorch/"

# Scope
EMPTY_ARRAY=()
RET_VERSION="0.1.1"
DESCRIPTION="ROCm Machine Learning Stack installer"
PYT_PKG_PY27="torch-1.3.0a0+87217cf-cp27-cp27mu-linux_x86_64.whl"
PYT_PKG_PY35="torch-1.3.0a0+87217cf-cp35-cp35m-linux_x86_64.whl"
PYT_PKG_PY36="torch-1.3.0a0+87217cf-cp36-cp36m-linux_x86_64.whl"

# Benchmark
TF_BNCH_VER="cnn_tf_v1.13_compatible"
TF_MODEL="resnet50"
NUM_GPUS=1
BATCH_SIZE=128

# Run-time params
TOTALSTEPS=12
BEQUIET=false
FORCEYES=false
DEBUG=false
SKIPVERI=false
SKIPSYSC=false
INCONTAINER=false
FG_DEFAULT_COLOR="${FG_DEFAULT}"

PYVER=py3
[ "$PYVER" = "py2" ] && PYPI="pip" || PYPI="pip3"

# Container
IMGNAME="ubuntu:18.04"

###################################Commands##############################
# Debian cmds
DEB_INSTALL_CMD="apt-get -qq -y --allow-unauthenticated install"
DEB_INSTALL_PKG_CMD="dpkg -i"
DEB_REMOVE_CMD="apt-get autoremove -qq -y"
DEB_UPDATE_CMD="apt-get update"
DEB_SEARCH_CMD="dpkg -l"
DEB_FIXBROKEN_CMD="apt-get install -fqq"
DEB_CLEAN_CMD="apt-get clean"

# CentOS cmds
COS_INSTALL_CMD="yum -q -y install"
COS_INSTALL_PKG_CMD="rpm -i"
COS_REMOVE_CMD="yum autoremove -q -y"
COS_UPDATE_CMD="yum check-update"
COS_SEARCH_CMD="yum list installed"
COS_FIXBROKEN_CMD="$RET_IGNORE_CMD"
COS_CLEAN_CMD="yum clean packages"

# Commands
RET_IGNORE_CMD="ret_ignore"
RET_INSTALL_CMD=0
RET_INSTALL_PKG_CMD=1
RET_REMOVE_CMD=2
RET_UPDATE_CMD=3
RET_SEARCH_CMD=4
RET_FIXBROKEN_CMD=5
RET_CLEAN_CMD=6

# Init commands array with debian cmds
RET_CMDS_ARRAY=("DEB_INSTALL_CMD" "DEB_INSTALL_PKG_CMD" "DEB_REMOVE_CMD" "DEB_UPDATE_CMD" "DEB_SEARCH_CMD" "DEB_FIXBROKEN_CMD" "DEB_CLEAN_CMD")
